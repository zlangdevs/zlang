fun main() >> i32 {
    ?? Test 1: Infinite loop with break
    @printf("=== Test 1: Infinite loop ===\n");
    i32 i = 0;
    for {
        i = i + 1;
        @printf("Infinite loop iteration: %d\n", i);
        if i >= 3 {break;}
    }
    
    ?? Test 2: Loop with continue
    @printf("\n=== Test 2: Continue ===\n");
    i = 0;
    for {
        i = i + 1;
        if i == 2 {
            @printf("Skipping iteration 2\n");
            continue;
        }
        @printf("Loop with continue: %d\n", i);
        if i >= 5 {break;}
    }
    
    ?? Test 3: Nested loops
    @printf("\n=== Test 3: Nested loops ===\n");
    i = 0;
    for {
        i = i + 1;
        i32 j = 0;
        for {
            j = j + 1;
            if j == 2 {
                @printf("Inner loop continue at i=%d, j=%d\n", i, j); continue;
            }
            @printf("Nested loop: i=%d, j=%d\n", i, j);
            if j >= 3 {break;}
        }
        if i >= 2 {break;}
    }
    
    ?? Test 4: Loop with comparison expression
    @printf("\n=== Test 4: Comparison condition ===\n");
    i = 0;
    for (i != 10) {
        i = i + 1;
        @printf("Loop with comparison: %d\n", i);
    }
    
    ?? Test 5: Loop with integer expression (non-zero = true)
    @printf("\n=== Test 5: Integer condition (no parens) ===\n");
    i32 countdown = 5;
    for countdown {
        @printf("Countdown: %d\n", countdown);
        countdown = countdown - 1;
    }
    @printf("Countdown complete!\n");
    
    ?? Test 6: Loop with boolean expression (no parens)
    @printf("\n=== Test 6: Boolean condition (no parens) ===\n");
    bool keep_running = true;
    i = 0;
    for keep_running {
        i = i + 1;
        @printf("Boolean loop iteration: %d\n", i);
        if i >= 3 {
            keep_running = false;
        }
    }
    
    ?? Test 7: Loop with arithmetic expression
    @printf("\n=== Test 7: Arithmetic condition ===\n");
    i = 10;
    for (i - 5) {
        @printf("Arithmetic loop: %d\n", i);
        i = i - 1;
    }
    
    ?? Test 8: Loop with logical AND expression
    @printf("\n=== Test 8: Logical AND condition ===\n");
    i = 0;
    i32 limit = 5;
    for (i < limit && i != 3) {
        @printf("Logical AND loop: %d\n", i);
        i = i + 1;
    }
    
    ?? Test 9: Loop with logical OR expression
    @printf("\n=== Test 9: Logical OR condition ===\n");
    i = 0;
    for (i < 2 || i == 5) {
        @printf("Logical OR loop: %d\n", i);
        i = i + 1;
        if i > 6 {break;}
    }
    
    ?? Test 10: Loop with float expression (non-zero = true)
    @printf("\n=== Test 10: Float condition ===\n");
    f32 counter = 3.5;
    for (counter > 0.0) {
        @printf("Float loop: %f\n", counter);
        counter = counter - 1.0;
    }
    
    ?? Test 11: C-style for loop
    @printf("\n=== Test 11: C-style for ===\n");
    for i32 ci = 0; ci < 5; ci++ {
        @printf("C-style loop: %d\n", ci);
    }
    
    @printf("\n=== All loop tests completed! ===\n");
    return 0;
}