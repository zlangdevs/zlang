enum Color {
    RED,
    GREEN,
    BLUE
}

enum Status {
    OK,
    NOT_FOUND = 404,
    ERROR = 500,
}

fun main() >> i32 {
    @printf("RED = (expected 0):%d\n", Color.RED);
    @printf("GREEN = (expected 1):%d\n", Color.GREEN);
    @printf("BLUE = (expected 2):%d\n", Color.BLUE);

    @printf("OK = (expected 0):%d\n", Status.OK);
    @printf("NOT_FOUND = (expected 404):%d\n", Status.NOT_FOUND);
    @printf("ERROR = (expected 500):%d\n", Status.ERROR);
    
    Color a = Color.RED;
    @printf("(expected 1):");
    if a == Color.RED && a == 0 {@printf("1\n");} else {@printf("0\n");}
    u32 sum = 0;
    for i32 i = 0; i < Status.NOT_FOUND; i++ {
        sum++;
        sum++;
    }
    @printf("(expected 808):%d\n", sum);
    i32 i = Status.ERROR;
    i = i - Status.NOT_FOUND;
    @printf("(expected 96):%d\n", i);
    return 0;
}